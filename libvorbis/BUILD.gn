import("../ffmpeg_options.gni")

config("libvorbis_config") {
  defines = [
    "PIC",
    "HAVE_CONFIG_H",
  ]
  
  ogg_vorbis_arch = ffmpeg_arch
  if (ogg_vorbis_arch == "arm-neon") {
    ogg_vorbis_arch = "arm"
  } 

  include_dirs = [
    # platform and arch-specific headers
      "config/$os_config/$ogg_vorbis_arch",
      "../libogg/include",
      "../libogg/config/$os_config/$ogg_vorbis_arch",
      "include",
  ]
  if(is_win) {
    cflags = [
      "/wd4706", # assignment within conditional expression
      "/wd4305", # truncation from double to float
    ]
  } else {
    cflags = ["-Wno-unused-function"]
  }
}
static_library("libvorbisenc") {
  deps = [":libvorbis"]
  include_dirs = ["lib"]
  sources = ["lib/vorbisenc.c"]
  public_configs = [":libvorbis_config"]
}

static_library("libvorbis") {
  public_deps = ["../libogg:libogg"]
  sources = [
    "lib/mdct.c",
    "lib/smallft.c",
    "lib/block.c",
    "lib/envelope.c",
    "lib/window.c",
    "lib/lsp.c",
    "lib/lpc.c",
    "lib/analysis.c",
    "lib/synthesis.c",
    "lib/psy.c",
    "lib/info.c",
    "lib/floor1.c",
    "lib/floor0.c",
    "lib/res0.c",
    "lib/mapping0.c",
    "lib/registry.c",
    "lib/codebook.c",
    "lib/sharedbook.c",
    "lib/lookup.c",
    "lib/bitrate.c",
  ]
  public_configs = [":libvorbis_config"]
}

executable("libvorbis_test") {
  deps = [ ":libvorbis" ]
  sources = [ "examples/decoder_example.c" ]
}
